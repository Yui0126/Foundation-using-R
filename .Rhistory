for(i in 1:10)
i
i
print(i)
class(i)
x <- c("a","b","c","d")
for (i in 1:4) {
print(x[i])
}
}
for (i in seq_along(x)) {
print(x[1])
}
for (letter in x) {
print(letter)
}
for (b in 1:6) {
print(b^2)
}
for (j in 5) {
print(j**3)
}
aaa
for (k in 2:8)
for (k in 2:8) {}
for (k in 2:8) {
mean(k)
}
swirl()
library(swirl)
swirl()
TRUE == TRUE
FALSE == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 == 7 !TRUE
5 !TRUE 7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
any(ints > 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
return(x)
x
submit()
boring_function()
boring_function(x)
boring_function(x)
boring_function(return(x))
return(boring_function(x))
boring_function <- function(x) {}
boring_function <- function(x) {}
boring_function <- function(x) {
x
}
submit()
boring_function <- function(x) {
x
}
submit()
boring_function <- function(x) {}
boring_function <- function(x) {
x
}
submit(boring_function())
submit(boring_function(x))
x
submit()
boring_function <- function(x) {
x
}
submit()
boring_function <- function(x) {
x
}
submit()
boring_function <- function(x) {
x
}
submit()
boring_function("My first function")
boring_function('My first function!')
boring_function()
function(boring_function())
boring_function
submit()
my_mean(c(4,5,10))
remainder <- function(num, divisor = 2) {
num %% divisor
}
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x,c(1)}, c(8, 4, 0))
evaluate(function(x){c(1)}, c(8, 4, 0))
evaluate(function(x){(1)}, c(8, 4, 0))
evaluate(function(x){x(1)}, c(8, 4, 0))
evaluate(function(x){x(c(1))}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){length(x)}, c(8, 4, 0))
info()
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[-1], c(8, 4, 0)})
evaluate(function(x){x[-1]}, c(8, 4, 0))
?paste
paste("Programming","is","fun!")
submit()
telegram
telegram("singing", "until","I","say")
submit()
mad_libs <- function(...){
args <- paste(..., place, ..., adjective, ..., noun, ...)
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
mad_libs <- function(...){
args <- paste(..., place, ..., adjective, ..., noun, ...)
args <- paste
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
submit()
submit()
mad_libs <- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
mad_libs <- function(...){
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
submit()
mad_libs(place = "Moon", adjective = "beautiful", noun = "Bob")
"%p%" <- function(left, right){
paste(left, right)
}
submit()
"I", "love" %p% "R"
"I""love" %p% "R"
"I love" %p% "R"
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
